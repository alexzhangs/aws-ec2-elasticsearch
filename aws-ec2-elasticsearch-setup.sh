#!/bin/bash

set -eo pipefail

if [[ $DEBUG -gt 0 ]]; then
    set -x
else
    set +x
fi

PROGNAME=${0##*/}
PROGNAME=${PROGNAME%.*}

usage () {
    printf "$PROGNAME\n"
    printf "\t[-c] [-u] <VERSION>\n\n"

    printf "OPTIONS\n"
    printf "\t[-c]\n\n"
    printf "\tUse cached installation package.\n\n"

    printf "\t[-u]\n\n"
    printf "\tUpgrade package.\n\n"

    printf "\t<VERSION>\n\n"
    printf "\tVersion of package.\n\n"

    exit 255
}

get_ec2_private_ip () {
    curl http://169.254.169.254/latest/meta-data/local-ipv4
}

get_ec2_public_ip () {
    curl http://169.254.169.254/latest/meta-data/public-ipv4
}

plugin_existence () {
    local name=${1:?}
    
    /usr/share/elasticsearch/bin/plugin list | grep -w "$name" > /dev/null
}

install_plugin () {
    local name=${1:?}

    if plugin_existence "$name"; then
        :
    else
        /usr/share/elasticsearch/bin/plugin install -b "$name"
    fi
}

get_total_memory_size () {
    # In KB
    cat /proc/meminfo | grep MemTotal | awk '{ print $2 }'
}


while getopts cuh opt; do
    case $opt in
        c)
            cache=1
            ;;
        u)
            update=1
            ;;
        h|*)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

[[ -z $1 ]] && usage
VERSION=${1:?} # eg: 2.4.0

URL="https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/rpm/elasticsearch/${VERSION:?}/elasticsearch-${VERSION:?}.rpm"
FILE="elasticsearch-${VERSION:?}.rpm"

if [[ $cache -ne 1 ]]; then
    wget -c "$URL"
fi

if [[ $update -eq 1 ]]; then
    rpm -U "$FILE"
else
    rpm -i "$FILE"
fi

plugins=(cloud-aws analysis-smartcn)
for p in "${plugins[@]}"; do
    install_plugin "$p"
done

size=$(echo "$(get_total_memory_size) / 1024 / 1024 / 2" | bc)
content="ES_HEAP_SIZE=${size:?}g"
regex='^#ES_HEAP_SIZE='
mark_begin="# BEGIN: Generated by $PROGNAME for ES_HEAP_SIZE"
mark_end="# -END-: Generated by $PROGNAME for ES_HEAP_SIZE"
inject-to-file.sh \
    -c "$content" \
    -f /etc/sysconfig/elasticsearch \
    -p after \
    -a "$regex" \
    -m "$mark_begin" \
    -n "$mark_end" \
    -x "$mark_begin" \
    -y "$mark_end"

content='MAX_LOCKED_MEMORY=unlimited'
regex='^#MAX_LOCKED_MEMORY='
mark_begin="# BEGIN: Generated by $PROGNAME for MAX_LOCKED_MEMORY"
mark_end="# -END-: Generated by $PROGNAME for MAX_LOCKED_MEMORY"
inject-to-file.sh \
    -c "$content" \
    -f /etc/sysconfig/elasticsearch \
    -p after \
    -a "$regex" \
    -m "$mark_begin" \
    -n "$mark_end" \
    -x "$mark_begin" \
    -y "$mark_end"


private_ip=$(get_ec2_private_ip)
content="
cluster.name: \"esonaws\"
bootstrap.mlockall: true
discovery.zen.ping.unicast.hosts: [\"${private_ip:?}\"]
network.host: [\"${private_ip:?}\"]
index.max_result_window: 1000000
"
mark_begin="# BEGIN: Generated by $PROGNAME"
mark_end="# -END-: Generated by $PROGNAME"
inject-to-file.sh \
    -c "$content" \
    -f /etc/elasticsearch/elasticsearch.yml \
    -p end \
    -m "$mark_begin" \
    -n "$mark_end" \
    -x "$mark_begin" \
    -y "$mark_end"

service elasticsearch start
chkconfig --add elasticsearch

#sleep 10
#curl ${private_ip:?}:9200/_cluster/health?pretty

exit
